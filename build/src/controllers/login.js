"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const authenticate_1=__importDefault(require("./authenticate")),dbToken_1=__importDefault(require("./dbToken")),errorUtils_1=require("../utils/errorUtils"),verify_1=__importDefault(require("../microservices/customer/middleware/verify")),login={withToken:withToken,withPassword:withPassword,withGoogle:withGoogle};async function withPassword(request,response){const{email:email,password:password}=request.body;try{verify_1.default.loginAttempts(email);const{token:token}=await authenticate_1.default.password(email,password),authInfo={email:email,token:token,isTemporary:!1};token||(authInfo.token=dbToken_1.default.getNew(email),await dbToken_1.default.save(email,authInfo.token)),response.status(200).send(authInfo)}catch(asyncError){const{error:error,code:code,message:message}=await(0,errorUtils_1.handleAsyncError)(asyncError);response.status(code).send(message)}}async function withToken(request,response,next){const{email:email,token:token}=request.body;if(!token)return next();try{const loginInfo=await authenticate_1.default.token(email,token);if(!loginInfo)return response.status(401).send("ERROR: Invalid email or token");const data={email:email,token:token,isTemporary:!1,googleId:loginInfo.googleId};response.status(200).send(data)}catch(asyncError){const{error:error,code:code,message:message}=await(0,errorUtils_1.handleAsyncError)(asyncError);response.status(code).send(message)}}async function withGoogle(request,response,next){try{const{email:email,googleId:googleId}=request.body;if(!googleId)return next();const{token:token}=await authenticate_1.default.google(email,googleId),authInfo={email:email,token:token,isTemporary:!1};token||(authInfo.token=dbToken_1.default.getNew(email),await dbToken_1.default.save(email,authInfo.token)),response.status(200).send(authInfo)}catch(asyncError){const{error:error,code:code,message:message}=await(0,errorUtils_1.handleAsyncError)(asyncError);response.status(code).send(message)}}exports.default=login;