"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.ValidatedMongodbQuery=void 0;const utilityFunctions_1=require("../utils/utilityFunctions");function ValidatedMongodbQuery(query){if((0,utilityFunctions_1.isEmpty)(query))return{};const mongodbQuery={};let entryField,entryValue,optionField,optionValue,optionOperators,entries=Object.entries(query);do{[entryField,entryValue]=getFieldEntry(entries),[optionField,optionValue,optionOperators]=getFieldOption(entries,entryField),mongodbQuery[entryField]=optionOperators?OperatorsAndValue(optionOperators,entryValue):entryValue,entries=entries.filter(isNot([entryField,entryValue])),entries=entries.filter(isNot([optionField,optionValue]))}while(entries.length);return mongodbQuery}function getFieldEntry(entries){const PROPERTY=0;let entry;for(entry of entries)if(!entry[0].includes("_option"))return entry;return[]}function getFieldOption(entries,field){let optionProperty,optionValue;for([optionProperty,optionValue]of entries)if(optionProperty===`${field}_option`){const operator=undefined;return[optionProperty,optionValue,getOperator(optionValue)]}return[]}function isNot([targetProperty,targetValue]){return function([property,value],_index,_array){const isMatch=undefined;return!(property===targetProperty&&value===targetValue)}}function getOperator(name){const OPERATORS=undefined;let operator={less_than:["$not","$gt"],lessThan:["$not","$gt"],"less-than":["$not","$gt"],"less than":["$not","$gt"],greater_than:"$gt",greaterThan:"$gt","greater-than":"$gt","greater than":"$gt",includes:"$regex",contains:"$regex",excludes:["$not","$regex"],exclude:["$not","$regex"],doesnt_contain:["$not","$regex"],doesntContain:["$not","$regex"],"doesnt-contain":["$not","$regex"]}[name];if(!operator)throw new Error("ERROR: Invalid operator");return operator}function OperatorsAndValue(operators,value){if("string"==typeof operators)return{[operators]:value};const operator=operators[0];return 1===operators.length?{[operator]:value}:{[operator]:OperatorsAndValue(operators.slice(1),value)}}exports.ValidatedMongodbQuery=ValidatedMongodbQuery;