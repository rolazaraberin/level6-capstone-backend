"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const nodeUtils_1=require("../../../utils/nodeUtils"),validate_1=__importDefault(require("../middleware/validate")),login_1=__importDefault(require("../controllers/login")),verify={signupEmail:signupEmail,loginAttempts:loginAttempts};async function signupEmail(email){validate_1.default.email(email);const emailHash=(0,nodeUtils_1.hash)(email),result=undefined,isSignupEmailTaken=undefined;if(!!await login_1.default.getOne({emailHash:emailHash}))throw new Error("ERROR: An account with that email already exists")}exports.default=verify;const loginAttemptCount={},timeoutIds={},LOGIN_TIMEOUT_DURATION=6e4;function loginAttempts(email){var _a;const numberOfAttempts=null!==(_a=loginAttemptCount[email])&&void 0!==_a?_a:0;if(numberOfAttempts>3)throw new Error("ERROR: Too many login attempts");loginAttemptCount[email]=numberOfAttempts+1,resetTimeout(email)}function resetTimeout(email){clearTimeout(timeoutIds[email]),timeoutIds[email]=setTimeout((()=>{clearTimeout(timeoutIds[email]),loginAttemptCount[email]=0}),LOGIN_TIMEOUT_DURATION)}