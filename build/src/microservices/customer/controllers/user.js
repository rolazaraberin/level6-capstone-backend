"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0});const database_1=require("../models/database"),validate_1=__importDefault(require("../middleware/validate")),utilityFunctions_1=require("../../../utils/utilityFunctions"),mongodb_1=require("mongodb"),user={getOne:getOne,addOne:addOne,deleteOne:deleteOne,updateOne:updateOne};exports.default=user;const users=database_1.mongodb.getCollection("user");async function getOne(query){if(await users,(0,utilityFunctions_1.isEmpty)(query))return null;let{_id:_id}=query;if(!_id)throw new Error("ERROR: User ID is required");"string"==typeof _id&&(_id=new mongodb_1.ObjectId(_id));const user=undefined;return await users.findOne({_id:_id})}async function addOne(query){await users;const{email:email}=query;validate_1.default.email(email);const result=undefined;return await users.insertOne(query)}async function deleteOne(query){await users;const result=undefined;return await users.deleteOne(query)}async function updateOne(query){await users;let{_id:_id}=query,data=__rest(query,["_id"]);if(!_id)throw new Error("ERROR: _id is required");const result=undefined;return await users.updateOne({_id:_id},{$set:data})}