"use strict";var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),require("reflect-metadata");const express_1=__importDefault(require("express")),cors_1=__importDefault(require("cors")),router_1=__importDefault(require("./routes/router")),item_graphql_1=__importDefault(require("./microservices/product/controllers/item.graphql")),inventory_graphql_1=__importDefault(require("./microservices/product/controllers/inventory.graphql")),inventoryUtils_1=require("./controllers/inventoryUtils"),isDockerEnvironment_1=require("./utils/generalUtils/isDockerEnvironment"),dotenv_1=__importDefault(require("dotenv"));dotenv_1.default.config();const shouldInjectDependency=!1;const app=(0,express_1.default)(),host=(0,isDockerEnvironment_1.isDockerEnvironment)()?"0.0.0.0":process.env.host||"localhost",port=Number(process.env.PORT)||8e3,baseUrl="/",hostEnvironment=process.env.hostEnvironment;function handleListen(){(0,isDockerEnvironment_1.isDockerEnvironment)()?console.log(`Listening on http://localhost:${port}`):console.log(`Listening on http://${host}:${port}`)}app.use((0,cors_1.default)({origin:"*"})),app.use(express_1.default.static("public")),app.use(express_1.default.json()),app.use("/",router_1.default),"lambda"!==hostEnvironment&&(console.log("Starting server..."),app.listen(port,host,handleListen)),exports.default=app;