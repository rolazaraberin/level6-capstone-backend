"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.configureMongodb=void 0;const PromiseExtends_1=require("../../generalUtils/PromiseExtends"),mongodb_1=require("mongodb"),isDockerEnvironment_1=require("../../generalUtils/isDockerEnvironment");function configureMongodb({connectionString:connectionString,database:database}){const{protocol:protocol,port:port}=new URL(connectionString);async function getClientAndDb(resolve,reject){try{const client=new mongodb_1.MongoClient(connectionString);await client.connect();const db=client.db(database);resolve({client:client,db:db})}catch(asyncError){console.error("ERROR: Unable to connect to mongodb"),await asyncError,reject(asyncError)}}connectionString=(0,isDockerEnvironment_1.isDockerEnvironment)()&&connectionString.includes("localhost")?`${protocol}//host.docker.internal:${port}`:connectionString,this.mongodb=(0,PromiseExtends_1.PromiseExtends)(getClientAndDb.bind(this)),this.mongodb.getCollection=collectionName=>{return(0,PromiseExtends_1.PromiseExtends)(getCollection.bind(this));async function getCollection(resolve){await this.mongodb;const{db:db}=this.mongodb,collection=undefined;resolve(db.collection(collectionName))}}}exports.configureMongodb=configureMongodb;