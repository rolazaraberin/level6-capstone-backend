{
  "name": "level6-capstone-backend",
  "version": "1.0.0",
  "engines": {
    "node": "18.14.2"
  },
  "scripts": {
    "start": "npm run node-start",
    "transpile": "npm run typescript-build && npm run minify-build",
    "build": "npm run webpack-build",
    "test": "npm run prod-test",
    "deploy": "npm run github-push",
    "sequence": "npm run transpile && npm run build && npm run deploy",
    "watch": "jest --watchAll",
    "stop": "kill-port 8000",
    "production": "npm run prod-start",
    "migration": "npm run mongo-migrations",
    "seed": "npm run mongo-seeds",
    "remove": "npm run claudia-delete",
    "rollback": "npm run knex-rollback && npm run typeorm-rollback",
    "sync": "npm run github-pull main",
    "transpile-build": "npm run transpile && npm run build",
    "dev-test": "jest --runInBand --config jest.config.development.ts --detectOpenHandles",
    "dev-test2": "jest --runInBand --config jest.config.development.ts --detectOpenHandles ./src/controllers/inventoryUtils.test.ts",
    "build-start": "node ./build/src/index.js",
    "prod-start": "node dist/index.js",
    "prod-test": "jest --config jest.config.production.ts --runInBand --detectOpenHandles ",
    "public-start": "node ./public/index.js",
    "public-build": "npm run webpack-build",
    "claudia-init": "claudia create --handler build/src/index.handler --name level6-capstone-backend --cache-api-config staging --region us-west-1 --config .aws/claudia.json --role arn:aws:iam::115673921217:role/claudiajs --timeout 15 --runtime nodejs20.x --use-local-dependencies --deploy-proxy-api",
    "claudia-build": "npm run compile",
    "claudia-deploy": "node tools/claudiaDeploy.js arn:aws:iam::115673921217:role/claudiajs",
    "claudia-test": "claudia test-lambda --config .cluaidaJs/claudia.json",
    "claudia-delete": "claudia destroy --config .claudiaJs/claudia.json",
    "babel-build": "babel . --out-dir build --extensions .ts,.js,.tsx,.jsx, --delete-dir-on-start --ignore node_modules",
    "bak-babel-build": "babel . --out-dir build --copy-files --no-copy-ignored --extensions .ts,.js,.tsx,.jsx --compact --minified --delete-dir-on-start",
    "docker-build": "docker build --tag level-6-capstone-backend .",
    "docker-images": "docker images",
    "docker-start": "docker run -p 127.0.0.1:8000:8000 level-6-capstone-backend",
    "docker-containers": "docker ps",
    "docker-stop": "docker stop 46b119285d93ec727d4958b2bc668b9d7c4863df1d4dfd4e897b083b8ccd34ed",
    "docker-storage": "docker system df",
    "docker-clean": "docker container prune -f; docker image prunt -f; docker buildx prune -f",
    "github-push": "git push github main",
    "github-pull": "npm run github-info2 && git pull github",
    "github-add": "git remote add github https://github.com/rolazaraberin/level6-level6-capstone-backend.git ",
    "github-logout": "npm run github-info && git credential reject",
    "github-login": "npm run github-info && git credential fill",
    "github-info": "echo Type protocol=https host=github.com",
    "github-info2": "echo NOTE: If error, include branch name.",
    "knex-tables": "knex migrate:latest --env cockroachdb",
    "knex-tables2": "ts-node src/models/migrations/manualKnexMigration.ts",
    "knex-tables3": "node build/src/models/migrations/manualKnexMigration.js",
    "knex-seed": "knex seed:run --env cockroachdb",
    "knex-seed2": "ts-node src/models/seeds/manualKnexSeed.ts",
    "knex-seed3": "node build/src/models/seeds/manualKnexSeed.js",
    "knex-migration": "npm run knex-tables && npm run knex-seed",
    "knex-migration2": "npm run knex-tables2 && npm run knex-seed2",
    "knex-migration3": "npm run knex-tables3 && npm run knex-seed3",
    "knex-rollback": "knex migrate:rollback --env cockroachdb",
    "knex-rollback2": "ts-node src/models/migrations/manualKnexMigrationDrop.ts",
    "mysql-tables": "knex migrate:latest --env mysql",
    "mysql-migration": "knex migrate:latest --env mysql",
    "mysql-rollback": "knex migrate:rollback --env mysql",
    "mysql-data": "knex seed:run --env mysql",
    "mysql-seed": "knex seed:run --env mysql",
    "minify-build": "node src/utils/generalUtils/minify.js build",
    "mongo-migrations": "npm run mongo-migration1 && npm run mongo-migration2 && npm run mongo-migration3 && npm run mongo-migration4 && npm run mongo-migration5",
    "mongo-migration1": "ts-node src/microservices/customer/models/migrations/createLoginSchema.ts",
    "mongo-migration2": "ts-node src/microservices/customer/models/migrations/createUserSchema.ts",
    "mongo-migration3": "ts-node src/microservices/product/models/migrations/createCartSchema.ts",
    "mongo-migration4": "ts-node src/microservices/product/models/migrations/createInventorySchema.ts",
    "mongo-migration5": "ts-node src/microservices/product/models/migrations/createItemSchema.ts",
    "mongo-seeds": "npm run mongo-seed1 && npm run mongo-seed2",
    "mongo-seed1": "ts-node src/microservices/product/models/seeds/seedItemSchema.ts",
    "mongo-seed2": "ts-node src/microservices/product/models/seeds/seedInventorySchema.ts",
    "node-start": "nodemon ./src/index.ts",
    "postmysql-migration": "knex seed:run --env mysql",
    "postmysql-tables": "knex seed:run --env mysql",
    "elephantsql-seed": "knex seed:run --env elephantsql",
    "elephantsql-migration": "knex migrate:latest --env elephantsql",
    "elephantsql-rollback": "knex migrate:rollback --env elephantsql",
    "postelephantsql-migration": "knex seed:run --env elephantsql",
    "typeorm-migration": "npm run typeorm-tables && npm run typeorm-seed",
    "typeorm-migration2": "npm run typeorm-tables2 && npm run typeorm-seed2",
    "typeorm-migration3": "npm run typeorm-tables3 && npm run typeorm-seed3",
    "typeorm-rollback": "typeorm-ts-node-commonjs migration:revert --dataSource data-source.ts",
    "typeorm-rollback2": "ts-node src/models/entities/manualTypeormMigrationDrop.ts",
    "typeorm-tables": "typeorm-ts-node-commonjs schema:sync --dataSource data-source.ts",
    "typeorm-tables2": "ts-node src/models/entities/manualTypeormMigration.ts",
    "typeorm-tables3": "node build/src/models/entities/manualTypeormMigration.js",
    "typeorm-seed": "typeorm-ts-node-commonjs migration:run --dataSource data-source.ts",
    "typeorm-seed2": "ts-node src/models/entities/manualTypeormSeed.ts",
    "typeorm-seed3": "node build/src/models/entities/manualTypeormSeed.js",
    "typeorm-unseed": "ts-node src/models/entities/manualTypeormSeedDrop.ts",
    "typeorm": "typeorm-ts-node-commonjs",
    "typescript-build": "ts-node src/utils/compile.ts",
    "webpack-compile": "webpack --mode none",
    "webpack-test": "webpack --config webpack.config.test.js",
    "webpack-build": "webpack build --env serverless",
    "webpack-server": "webpack serve --entry src/index.ts --env excludeNode --hot"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@apollo/client": "^3.8.8",
    "@sendgrid/mail": "^7.7.0",
    "axios": "^1.1.2",
    "better-sqlite3": "^7.6.2",
    "cockroachdb": "^1.0.3",
    "cors": "^2.8.5",
    "crypto-js": "^4.1.1",
    "dotenv": "^16.0.2",
    "express": "^4.18.1",
    "graphql": "^16.8.1",
    "jose": "^4.14.6",
    "knex": "^2.3.0",
    "lodash": "^4.17.21",
    "mongodb": "^6.3.0",
    "mysql": "^2.18.1",
    "pg": "^8.8.0",
    "reflect-metadata": "^0.1.13",
    "serverless-http": "^3.1.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.20.7",
    "@babel/core": "^7.20.12",
    "@babel/plugin-proposal-decorators": "^7.20.13",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-typescript": "^7.18.6",
    "@jest/globals": "^29.3.1",
    "@types/crypto-js": "^4.1.1",
    "@types/node": "^18.7.16",
    "babel-loader": "^8.2.5",
    "claudia": "^5.14.1",
    "copy-webpack-plugin": "^11.0.0",
    "dotenv-webpack": "^8.0.1",
    "html-webpack-plugin": "^5.5.0",
    "jest": "^29.4.1",
    "jest-environment-jsdom": "^28.1.3",
    "kill-port": "^2.0.1",
    "mini-css-extract-plugin": "^2.6.0",
    "nodemon": "^2.0.19",
    "serverless": "^3.38.0",
    "terser": "^5.16.3",
    "terser-webpack-plugin": "^5.3.6",
    "ts-jest": "^29.0.1",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "ts-patch": "^3.1.1",
    "tsconfig-paths": "^4.2.0",
    "tsconfig-paths-webpack-plugin": "^4.1.0",
    "typescript": "^5.3.2",
    "typescript-transform-paths": "^3.4.6",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0",
    "webpack-node-externals": "^3.0.0"
  }
}
